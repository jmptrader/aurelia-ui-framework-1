export declare class BaseListInput {
    model: any;
    value: string;
    options: any[];
    readonly: boolean;
    disabled: boolean;
    allowSearch: boolean;
    forceSelect: boolean;
    valueProperty: string;
    iconProperty: string;
    displayProperty: string;
    protected inputEl: any;
    protected elValue: any;
    protected element: any;
    protected dropdown: any;
    protected tether: any;
    protected obMouseup: any;
    protected original: any[];
    protected filtered: any[];
    protected isDisabled: boolean;
    protected isTagInput: boolean;
    protected showDropdown: boolean;
    protected hilight: any;
    protected floating: any;
    bind(bindingContext: Object, overrideContext: Object): void;
    attached(): void;
    detached(): void;
    disabledChanged(newValue: any): void;
    readonlyChanged(newValue: any): void;
    disable(b: any): void;
    clearInput(): void;
    focus(): void;
    fireEvent(evt: any): void;
    optionsChanged(newValue: any): void;
    valueChanged(newValue: any, oldValue?: any): void;
    hilightItem(evt: any): void;
    unhilightItem(evt: any): void;
    scrollIntoView(): void;
    openDropdown(): boolean;
    closeDropdown(): void;
    toggleDropdown(evt: any, forceClose?: boolean): void;
    keyDown(evt: any): any;
    search(): void;
    fireSelect(model?: any): void;
    fireChange(): void;
    addValue(val: any): void;
    removeValue(val: any): void;
}
export declare class UICombo extends BaseListInput {
    element: Element;
    constructor(element: Element);
    bind(bindingContext: Object, overrideContext: Object): void;
    attached(): void;
    detached(): void;
    value: string;
    model: any;
    errors: any;
    disabled: boolean;
    readonly: boolean;
    info: string;
    placeholder: string;
    emptyText: string;
    options: any;
    iconClass: string;
    valueProperty: string;
    displayProperty: string;
    iconProperty: string;
    forceSelect: boolean;
    private clear;
    fireSelect(model?: any): void;
    fireChange(): void;
}
export declare class UITags extends BaseListInput {
    element: Element;
    constructor(element: Element);
    bind(bindingContext: Object, overrideContext: Object): void;
    attached(): void;
    detached(): void;
    value: string;
    errors: any;
    disabled: boolean;
    readonly: boolean;
    info: string;
    placeholder: string;
    emptyText: string;
    options: any;
    iconClass: string;
    valueProperty: string;
    displayProperty: string;
    iconProperty: string;
    forceSelect: boolean;
    private clear;
    getDisplay(tag: any): any;
    addValue(val: any): void;
    removeValue(val: any): void;
    fireSelect(model?: any): void;
    fireChange(): void;
}
export declare class UIList extends BaseListInput {
    element: Element;
    constructor(element: Element);
    bind(bindingContext: Object, overrideContext: Object): void;
    attached(): void;
    detached(): void;
    value: string;
    model: any;
    errors: any;
    disabled: boolean;
    readonly: boolean;
    info: string;
    placeholder: string;
    emptyText: string;
    options: any;
    iconClass: string;
    valueProperty: string;
    displayProperty: string;
    iconProperty: string;
    forceSelect: boolean;
    private clear;
    fireSelect(model?: any): void;
    fireChange(): void;
}
export declare class UIReorder {
    element: Element;
    constructor(element: Element);
    options: Array<any>;
    displayProperty: any;
    private startY;
    private ghostModel;
    private ghostEl;
    private dragEl;
    private dropdown;
    private diff;
    private top;
    private move;
    private stop;
    startDrag(opt: any, $event: any): void;
    doDrag($event: any): void;
    stopDrag($event: any): void;
}
